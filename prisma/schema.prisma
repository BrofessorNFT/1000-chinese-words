// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Supabase uses PostgreSQL
  url      = env("DATABASE_URL") // Make sure this is in your .env file later
  directUrl = env("DIRECT_URL")
  // relationMode = "prisma" // Add if needed for Supabase migrations
}

// NextAuth.js Models
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  wordProgress  WordProgress[] // User's SRS progress
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Word {
  id               Int               @id @default(autoincrement())
  hanzi            String            // REMOVE @unique from here
  pinyin           String
  translation_en   String
  audio_url        String?
  exampleSentences ExampleSentence[]
  userProgress     WordProgress[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt

  @@index([hanzi])
  @@unique([hanzi, pinyin]) 
}


model ExampleSentence {
  id                      Int      @id @default(autoincrement())
  wordId                  Int
  word                    Word     @relation(fields: [wordId], references: [id], onDelete: Cascade)
  sentence_hanzi          String
  // sentence_pinyin      String? // Optional
  // sentence_translation_en String? // Optional
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  @@index([wordId])
}

model WordProgress {
  id             String    @id @default(cuid())
  userId         String
  wordId         Int
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  word           Word      @relation(fields: [wordId], references: [id], onDelete: Cascade)

  level          Int       @default(0)
  nextReviewDate DateTime  @default(now())
  lastReviewedAt DateTime?

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  @@unique([userId, wordId])
  @@index([userId])
  @@index([wordId])
  @@index([userId, nextReviewDate])
}